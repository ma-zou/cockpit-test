{"version":3,"sources":["abstracts/_fonts.sass","components/flexgrid.sass","mixins/breakpoint.sass","basics/globals.sass","abstracts/_colors.sass","components/navigation.sass","abstracts/_transitions.sass","abstracts/_shadows.sass","components/navigationToggler.sass","components/claim.sass","components/mobileBar.sass","components/headlines.sass","mixins/helpers.sass"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["$font_1: 'Montserrat'\r\n$font_2: 'Montserrat'\r\n\r\n$main_font: $font_1\r\n$secondary_font: $font_2\r\n$base_font_size: 16px\r\n\r\n$headlines: (\"h1\": 60px, \"h2\": 55px, \"h3\": 40px, \"h4\": 30px, \"h5\": 25px, \"h6\": 18px)\r\n\r\n\r\n@font-face \r\n  font-family: 'Montserrat'\r\n  font-style: normal\r\n  font-weight: 400\r\n  src: url('/assets/fonts/montserrat-v15-latin-regular.eot') \r\n  src: local(''), url('/assets/fonts/montserrat-v15-latin-regular.eot?#iefix') format('embedded-opentype'), url('/assets/fonts/montserrat-v15-latin-regular.woff2') format('woff2'), url('/assets/fonts/montserrat-v15-latin-regular.woff') format('woff'), url('/assets/fonts/montserrat-v15-latin-regular.ttf') format('truetype'), url('/assets/fonts/montserrat-v15-latin-regular.svg#Montserrat') format('svg') \r\n\r\n\r\n@font-face \r\n  font-family: 'Montserrat'\r\n  font-style: normal\r\n  font-weight: 700\r\n  src: url('/assets/fonts/montserrat-v15-latin-700.eot') \r\n  src: local(''), url('/assets/fonts/montserrat-v15-latin-700.eot?#iefix') format('embedded-opentype'), url('/assets/fonts/montserrat-v15-latin-700.woff2') format('woff2') , url('/assets/fonts/montserrat-v15-latin-700.woff') format('woff') , url('/assets/fonts/montserrat-v15-latin-700.ttf') format('truetype'), url('/assets/fonts/montserrat-v15-latin-700.svg#Montserrat') format('svg') ","@use 'abstracts'\r\n@use 'functions/rem' as *\r\n@use 'mixins/breakpoint'\r\n@use 'sass:math'\r\n@use 'sass:map'\r\n\r\n.row\r\n    margin-left: auto\r\n    margin-right: auto\r\n    max-width: rem(abstracts.$grid_size)\r\n    width: 100%\r\n    position: relative\r\n    display: flex\r\n    flex: 0 1 auto\r\n    flex-wrap: wrap\r\n    flex-direction: row\r\n    justify-content: flex-start\r\n    align-items: stretch\r\n\r\n    &:not(.full-width)\r\n        .row\r\n            margin-left: -#{rem(abstracts.$base_gap)}\r\n            padding-left: 0\r\n            padding-right: 0\r\n            max-width: calc(100% + #{rem(abstracts.$base_gap * 2)})\r\n            width: calc(100% + #{rem(abstracts.$base_gap * 2)})\r\n        \r\n  \r\n    &.full-width\r\n        max-width: none\r\n  \r\n    .cms-el-row\r\n        margin-left: -#{rem(abstracts.$base_gap)}\r\n        padding-left: 0\r\n        padding-right: 0\r\n        max-width: calc(100% + #{rem(abstracts.$base_gap * 2)})\r\n        width: calc(100% + #{rem(abstracts.$base_gap * 2)})\r\n  \r\n    > .row\r\n        margin: 0\r\n        padding: 0\r\n        max-width: 100%\r\n        width: 100%\r\n        flex-basis: 100%\r\n    \r\n\r\n\r\n.col\r\n    float: left\r\n    padding-left: rem(abstracts.$base_gap)\r\n    padding-right: rem(abstracts.$base_gap)\r\n    max-width: 100%\r\n    width: 100%\r\n    flex: 0 0 auto\r\n    flex-grow: 1\r\n    flex-basis: 100%\r\n    box-sizing: border-box\r\n\r\n\r\n.no-gutter,\r\n.no-gutter > .col\r\n    padding-left: 0\r\n    padding-right: 0\r\n\r\n@each $bp, $size in abstracts.$breakpoints\r\n    @include breakpoint.breakpoint($bp)\r\n        @for $i from 0 through abstracts.$column_amount\r\n            .col.#{$bp}-#{$i}\r\n                max-width: math.div(100%, abstracts.$column_amount) * $i\r\n                flex-basis: math.div(100%, abstracts.$column_amount) * $i\r\n","@use \"sass:map\"\r\n@use \"../abstracts/breakpoints\" as *\r\n\r\n@mixin breakpoint($bpName, $minMax: min)\r\n    @if $minMax == min\r\n        @media (min-width: map.get($breakpoints, $bpName))\r\n            @content\r\n    @else\r\n        @media (max-width: map.get($breakpoints, $bpName) - 1)\r\n            @content","@use 'abstracts'\r\n@use 'functions/rem' as *\r\n@use 'mixins/breakpoint'\r\n@use 'components/headlines'\r\n@use 'components/navigation'\r\n@use 'components/navigationToggler'\r\n@use 'components/button'\r\n@use 'components/mobileBar'\r\n@use 'components/flexgrid'\r\n@use 'components/claim'\r\n@use 'mixins/helpers'\r\n@use 'sass:map'\r\n\r\n*\r\n    margin: 0\r\n    padding: 0\r\n    box-sizing: border-box\r\n\r\nhtml\r\n    font-size: abstracts.$base_font_size\r\n    font-family: abstracts.$main_font\r\n    color: abstracts.$dark\r\n    background: abstracts.$light\r\n\r\nbody\r\n    min-height: 100vh\r\n    position: relative\r\n    \r\n    @include breakpoint.breakpoint(abstracts.$navigation_switch)\r\n        margin-top: rem(100px)\r\n        \r\nnav\r\n    @include breakpoint.breakpoint(abstracts.$navigation_switch, max)\r\n        @include navigation.mobile\r\n\r\n    @include breakpoint.breakpoint(abstracts.$navigation_switch)\r\n        @include navigation.desktop\r\n\r\n\r\n@include navigationToggler.base\r\n@include breakpoint.breakpoint(abstracts.$navigation_switch, max)\r\n    @include navigationToggler.is_not_toggled(nav)\r\n        @include navigation.hide_offcanvas\r\n\r\n\r\nheader\r\n    background: url(\"/assets/images/header.jpg\")\r\n    height: 50vh\r\n    display: flex\r\n    align-items: center\r\n\r\n    .claim\r\n        @include claim.base\r\n\r\n#mobile_bar\r\n    @include mobileBar.mobile_bar\r\n\r\n// HTML ELEMENT STYLES\r\n\r\n// DEFAULT HEADLINES\r\n@each $headline, $size in abstracts.$headlines\r\n    #{$headline}\r\n        @include headlines.headline($size)\r\n\r\n// DEFAULT TEXT\r\np\r\n    line-height: 1.6em\r\n    @include helpers.margin_bottom","$color_1: #60CBC2\r\n$color_2: #FFFFFF\r\n$color_3: #4F77C9\r\n$color_4: #ACACAC\r\n$color_5: #EDEDED\r\n\r\n$primary: $color_1\r\n$secondary: $color_3\r\n$light: $color_2\r\n$dark: #101010","@use 'functions/rem' as *\r\n@use 'abstracts/fonts'\r\n@use 'abstracts/colors'\r\n@use 'abstracts/shadows'\r\n@use 'abstracts/transitions'\r\n@use 'abstracts/breakpoints'\r\n@use 'mixins/breakpoint'\r\n\r\n// \"right\" or \"left\"\r\n$mobile_alignment: \"left\"\r\n$offcanves_width: rem(360px)\r\n\r\n@mixin buttons\r\n    padding: 20px\r\n    display: block\r\n    text-decoration: none\r\n    color: colors.$dark\r\n\r\n    @include breakpoint.breakpoint(breakpoints.$navigation_switch) \r\n        padding: 40px 20px\r\n\r\n@mixin subnavigation\r\n    display: flex\r\n    align-items: column\r\n\r\n@mixin base\r\n    position: fixed\r\n\r\n    ul \r\n        display: flex\r\n        list-style: none\r\n\r\n        li\r\n            a, span\r\n                @include buttons\r\n\r\n        ul\r\n            opacity: 0\r\n            visibility: hidden\r\n            position: absolute\r\n\r\n@mixin mobile\r\n    @include base\r\n    top: 0\r\n    height: 100%\r\n    background: colors.$light\r\n    transition: transitions.$default\r\n    width: $offcanves_width\r\n\r\n    @if ($mobile_alignment == \"right\") \r\n        box-shadow: shadows.$right\r\n        right: 0\r\n    @else if ($mobile_alignment == \"left\")\r\n        box-shadow: shadows.$left\r\n        left: 0 \r\n\r\n    > ul\r\n        flex-direction: column\r\n  \r\n                \r\n@mixin hide_offcanvas\r\n    @if ($mobile_alignment == \"right\") \r\n        transform: translateX(100%)\r\n    @else if ($mobile_alignment == \"left\")\r\n        transform: translateX(-100%)\r\n\r\n\r\n@mixin desktop\r\n    @include base\r\n    width: 100%\r\n    background: colors.$light\r\n    box-shadow: shadows.$default\r\n    top: 0\r\n\r\n    > ul\r\n        justify-content: space-between","$default: all 300ms linear\r\n$hideShow: opacity 300ms linear, visibility 300ms linear","@use 'abstracts/colors'\r\n@use 'functions/rem' as *\r\n\r\n$default: 0 rem(5px) rem(15px) 0 rgba(colors.$dark, 0.4)\r\n$text: 0 rem(5px) rem(15px) rgba(colors.$dark, 0.4)\r\n\r\n$left: rem(-5px) rem(5px) rem(15px) 0 rgba(colors.$dark, 0.4)\r\n$right: rem(5px) rem(5px) rem(15px) 0 rgba(colors.$dark, 0.4)","$selector: 'input#navigation_toggler'\r\n\r\n@mixin base\r\n    #{$selector}\r\n        display: none\r\n\r\n@mixin is_toggled($element)\r\n    #{$selector}\r\n        &:checked ~ #{$element}\r\n            @content\r\n\r\n@mixin is_not_toggled($element)\r\n    #{$selector}\r\n        &:not(:checked) ~ #{$element}\r\n            @content\r\n\r\n","@use 'abstracts/shadows'\r\n@use 'abstracts/colors'\r\n@use 'functions/rem' as *\r\n\r\n@mixin base\r\n    font-size: rem(100px)\r\n    text-shadow: shadows.$text\r\n    color: colors.$light","@use 'functions/rem' as *\r\n@use 'abstracts/fonts'\r\n@use 'abstracts/colors'\r\n\r\n@mixin mobile_bar\r\n    display: flex\r\n    position: fixed\r\n    left: 0\r\n    bottom: 0\r\n    right: 0","@use 'sass:math'\r\n@use 'abstracts/fonts'\r\n@use 'abstracts/colors'\r\n@use 'abstracts/measurements'\r\n@use 'functions/rem' as *\r\n@use 'functions/em' as *\r\n\r\n$lineheight: 1.8em    \r\n$relation: math.div($lineheight, 3.6)\r\n\r\n@debug $relation\r\n\r\n@mixin headline($size)\r\n    margin-bottom: -#{$relation}\r\n    margin-top: -#{$relation}\r\n    font-size: $size\r\n    line-height: $lineheight\r\n    padding-bottom: rem(10px)\r\n","@use 'abstracts/measurements'\r\n@use 'functions/rem' as *\r\n\r\n@mixin margin_bottom($multiplicator: 1)\r\n    margin-bottom: rem(measurements.$margin_bottom * $multiplicator)"]}